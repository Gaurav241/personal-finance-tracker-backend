paths:
  /api/v1/categories:
    get:
      tags:
        - Categories
      summary: Get all categories
      description: |
        Retrieves all available categories for transactions.
        This endpoint is public and doesn't require authentication.
        Categories are cached for optimal performance.
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
              example:
                - id: 1
                  name: "Salary"
                  type: "income"
                  color: "#4ECDC4"
                  icon: "dollar-sign"
                - id: 2
                  name: "Groceries"
                  type: "expense"
                  color: "#FF6B6B"
                  icon: "shopping-cart"
                - id: 3
                  name: "Transportation"
                  type: "expense"
                  color: "#45B7D1"
                  icon: "car"
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags:
        - Categories
      summary: Create new category (Admin only)
      description: |
        Creates a new transaction category.
        Only admin users can create new categories.
        Category names must be unique within their type.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
            examples:
              income_category:
                summary: Income category
                value:
                  name: "Investment Returns"
                  type: "income"
                  color: "#2ECC71"
                  icon: "trending-up"
              expense_category:
                summary: Expense category
                value:
                  name: "Entertainment"
                  type: "expense"
                  color: "#E74C3C"
                  icon: "film"
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              example:
                id: 4
                name: "Entertainment"
                type: "expense"
                color: "#E74C3C"
                icon: "film"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          description: Category name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Category name already exists for this type"
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/categories/type/{type}:
    get:
      tags:
        - Categories
      summary: Get categories by type
      description: |
        Retrieves categories filtered by type (income or expense).
        This endpoint is public and doesn't require authentication.
        Useful for populating category dropdowns in forms.
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum: [income, expense]
          description: Category type to filter by
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
              examples:
                income_categories:
                  summary: Income categories
                  value:
                    - id: 1
                      name: "Salary"
                      type: "income"
                      color: "#4ECDC4"
                      icon: "dollar-sign"
                    - id: 5
                      name: "Freelance"
                      type: "income"
                      color: "#2ECC71"
                      icon: "briefcase"
                expense_categories:
                  summary: Expense categories
                  value:
                    - id: 2
                      name: "Groceries"
                      type: "expense"
                      color: "#FF6B6B"
                      icon: "shopping-cart"
                    - id: 3
                      name: "Transportation"
                      type: "expense"
                      color: "#45B7D1"
                      icon: "car"
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/categories/{id}:
    get:
      tags:
        - Categories
      summary: Get category by ID
      description: |
        Retrieves a specific category by its ID.
        This endpoint is public and doesn't require authentication.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Category ID
      responses:
        '200':
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              example:
                id: 1
                name: "Salary"
                type: "income"
                color: "#4ECDC4"
                icon: "dollar-sign"
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      tags:
        - Categories
      summary: Update category (Admin only)
      description: |
        Updates an existing category.
        Only admin users can update categories.
        Category type cannot be changed after creation.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Category ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 100
                  description: Category name
                color:
                  type: string
                  pattern: '^#[0-9A-Fa-f]{6}$'
                  description: Category color in hex format
                icon:
                  type: string
                  maxLength: 50
                  description: Category icon identifier
            example:
              name: "Updated Category Name"
              color: "#3498DB"
              icon: "updated-icon"
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Category name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Category name already exists for this type"
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
        - Categories
      summary: Delete category (Admin only)
      description: |
        Deletes a category permanently.
        Only admin users can delete categories.
        Categories with associated transactions cannot be deleted.
        Consider setting transactions to uncategorized before deletion.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Category ID
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Category deleted successfully"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Category has associated transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Cannot delete category with associated transactions"
        '500':
          $ref: '#/components/responses/ServerError'